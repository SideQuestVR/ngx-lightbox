{"version":3,"sources":["ng://ngx-lightbox/lib/lightbox-event.service.ts","ng://ngx-lightbox/lib/lightbox.component.html","ng://ngx-lightbox/lib/lightbox.component.ts","ng://ngx-lightbox/lib/lightbox-config.service.ts","ng://ngx-lightbox/lib/lightbox-overlay.component.ts","ng://ngx-lightbox/lib/lightbox.service.ts","ng://ngx-lightbox/lib/lightbox.module.ts"],"names":["LIGHTBOX_EVENT","CHANGE_PAGE","CLOSE","OPEN","ZOOM_IN","ZOOM_OUT","ROTATE_LEFT","ROTATE_RIGHT","FILE_NOT_FOUND","LightboxEvent","this","_lightboxEventSource","Subject","lightboxEvent$","asObservable","prototype","broadcastLightboxEvent","event","next","factory","ɵfac","providedIn","LightboxWindowRef","Object","defineProperty","window","i0.ɵɵelement","i0.ɵɵproperty","ctx_r2","ui","showReloader","ctx_r3","SafePipe","sanitizer","transform","url","bypassSecurityTrustResourceUrl","core","ɵɵdirectiveInject","platformBrowser","DomSanitizer","pure","LightboxComponent","_elemRef","_rendererRef","_lightboxEvent","_lightboxElem","_lightboxWindowRef","_sanitizer","_documentRef","_this","options","album","currentImageIndex","_windowRef","nativeWindow","showLeftArrow","showRightArrow","showArrowNav","showZoomButton","showRotateButton","showPageNumber","showCaption","classList","content","pageNumber","_event","subscription","subscribe","_onReceivedEvent","rotate","ngOnInit","forEach","caption","sanitize","SecurityContext","HTML","ngAfterViewInit","_cssValue","containerTopPadding","Math","round","_getCssStyleValue","_containerElem","containerRightPadding","containerBottomPadding","containerLeftPadding","imageBorderWidthTop","_imageElem","_iframeElem","imageBorderWidthBottom","imageBorderWidthLeft","imageBorderWidthRight","_validateInputData","_prepareComponent","_registerImageLoadingEvent","ngOnDestroy","disableKeyboardNav","_disableKeyboardNav","unsubscribe","close","$event","stopPropagation","target","contains","id","data","control","height","width","_rotateContainer","_calcTransformPoint","getElementById","style","webkitTransform","parseInt","temp","_resetImage","image","transformOrigin","nextImage","length","_changeImage","prevImage","Array","Error","i","src","isNaN","Number","iframe","needsIframe","setTimeout","_onLoadImageSuccess","preloader","Image","onload","onerror","e","URL","imageHeight","imageWidth","maxImageHeight","maxImageWidth","windowHeight","windowWidth","naturalImageWidth","naturalImageHeight","nativeElement","naturalWidth","innerWidth","naturalHeight","innerHeight","fitImageInViewPort","setStyle","_sizeContainer","centerVertically","_centerVertically","topDistance","documentElement","scrollTop","oldWidth","_outerContainerElem","offsetWidth","oldHeight","offsetHeight","newWidth","newHeight","abs","enableTransition","transitions","eventName","push","listen","currentTarget","_postResize","isArray","eventHandler","_dataContainerElem","_showImage","_updateNav","_updateDetails","_enableKeyboardNav","_addCssAnimation","_positionLightBox","showZoom","showRotate","top","pageYOffset","positionFromTop","left","pageXOffset","scrollLeft","disableScrolling","addClass","resizeDuration","fadeDuration","_captionElem","_numberElem","_end","removeClass","cmpRef","destroy","showImageNumberLabel","_albumLabel","albumLabel","replace","newIndex","_hideImage","alwaysShowNav","createEvent","_showArrowNav","wrapAround","_leftArrowElem","_rightArrowElem","_showLeftArrowNav","_showRightArrowNav","keyup","_keyboardAction","keycode","keyCode","key","String","fromCharCode","toLowerCase","match","elem","propertyName","parseFloat","getComputedStyle","getPropertyValue","ElementRef","Renderer2","DOCUMENT","selectors","viewQuery","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵadvance","ɵɵsanitizeHtml","i0.ɵɵtextInterpolate","encapsulation","LightboxConfig","alwaysShowNavOnTouchDevices","containerElementResolver","documentRef","querySelector","LightboxOverlayComponent","_subscription","_sizeOverlay","onResize","_getOverlayWidth","_getOverlayHeight","max","body","scrollWidth","clientWidth","scrollHeight","clientHeight","hostVars","hostBindings","ɵɵresolveWindow","Lightbox","_componentFactoryResolver","_injector","_applicationRef","_lightboxConfig","open","curIndex","overlayComponentRef","_createComponent","componentRef","newOptions","assign","instance","attachView","hostView","onDestroy","detachView","containerElement","appendChild","location","ComponentClass","resolveComponentFactory","create","ɵɵinject","ComponentFactoryResolver","Injector","ApplicationRef","LightboxModule","providers","imports","CommonModule","declarations"],"mappings":"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","sourcesContent":["import { Observable, Subject } from 'rxjs';\r\n\r\nimport { Injectable} from '@angular/core';\r\n\r\nexport interface IEvent {\r\n  id: number;\r\n  data?: any;\r\n}\r\n\r\nexport interface IAlbum {\r\n  src: string;\r\n  caption?: string;\r\n  thumb: string;\r\n  iframe?: boolean;\r\n}\r\n\r\nexport const LIGHTBOX_EVENT = {\r\n  CHANGE_PAGE: 1,\r\n  CLOSE: 2,\r\n  OPEN: 3,\r\n  ZOOM_IN: 4,\r\n  ZOOM_OUT: 5,\r\n  ROTATE_LEFT: 6,\r\n  ROTATE_RIGHT: 7,\r\n  FILE_NOT_FOUND: 8\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LightboxEvent {\r\n  private _lightboxEventSource: Subject<Object>;\r\n  public lightboxEvent$: Observable<Object>;\r\n  constructor() {\r\n    this._lightboxEventSource = new Subject<Object>();\r\n    this.lightboxEvent$ = this._lightboxEventSource.asObservable();\r\n  }\r\n\r\n  broadcastLightboxEvent(event: any): void {\r\n    this._lightboxEventSource.next(event);\r\n  }\r\n}\r\n\r\nfunction getWindow (): any {\r\n  return window;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LightboxWindowRef {\r\n  get nativeWindow (): any {\r\n      return getWindow();\r\n  }\r\n}\r\n","<div class=\"lb-outerContainer transition\" #outerContainer id=\"outerContainer\">\r\n    <div class=\"lb-container\" #container id=\"container\">\r\n        <img class=\"lb-image\" id=\"image\" [src]=\"album[currentImageIndex].src\" class=\"lb-image animation fadeIn\"\r\n            [hidden]=\"ui.showReloader\" #image\r\n            *ngIf=\"!album[currentImageIndex].iframe && !needsIframe(album[currentImageIndex].src)\">\r\n        <iframe class=\"lb-image\" id=\"iframe\" [src]=\"album[currentImageIndex].src | safe\"\r\n            class=\"lb-image lb-iframe animation fadeIn\" [hidden]=\"ui.showReloader\" #iframe\r\n            *ngIf=\"album[currentImageIndex].iframe || needsIframe(album[currentImageIndex].src)\">\r\n        </iframe>\r\n        <div class=\"lb-nav\" [hidden]=\"!ui.showArrowNav\" #navArrow>\r\n            <a class=\"lb-prev\" [hidden]=\"!ui.showLeftArrow\" (click)=\"prevImage()\" #leftArrow></a>\r\n            <a class=\"lb-next\" [hidden]=\"!ui.showRightArrow\" (click)=\"nextImage()\" #rightArrow></a>\r\n        </div>\r\n        <div class=\"lb-loader\" [hidden]=\"!ui.showReloader\" (click)=\"close($event)\">\r\n            <a class=\"lb-cancel\"></a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"lb-dataContainer\" [hidden]=\"ui.showReloader\" #dataContainer>\r\n    <div class=\"lb-data\">\r\n        <div class=\"lb-details\">\r\n            <span class=\"lb-caption animation fadeIn\" [hidden]=\"!ui.showCaption\"\r\n                [innerHtml]=\"album[currentImageIndex].caption\" #caption>\r\n            </span>\r\n            <span class=\"lb-number animation fadeIn\" [hidden]=\"!ui.showPageNumber\" #number>{{ content.pageNumber\r\n                }}</span>\r\n        </div>\r\n        <div class=\"lb-controlContainer\">\r\n            <div class=\"lb-closeContainer\">\r\n                <a class=\"lb-close\" (click)=\"close($event)\"></a>\r\n            </div>\r\n            <div class=\"lb-turnContainer\" [hidden]=\"!ui.showRotateButton\">\r\n                <a class=\"lb-turnLeft\" (click)=\"control($event)\"></a>\r\n                <a class=\"lb-turnRight\" (click)=\"control($event)\"></a>\r\n            </div>\r\n            <div class=\"lb-zoomContainer\" [hidden]=\"!ui.showZoomButton\">\r\n                <a class=\"lb-zoomOut\" (click)=\"control($event)\"></a>\r\n                <a class=\"lb-zoomIn\" (click)=\"control($event)\"></a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import {DOCUMENT} from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit, Pipe, PipeTransform,\r\n  Renderer2,\r\n  SecurityContext,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\nimport {IAlbum, IEvent, LIGHTBOX_EVENT, LightboxEvent, LightboxWindowRef} from './lightbox-event.service';\r\n\r\n@Pipe({ name: 'safe' })\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  transform(url) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: '[lb-content]',\r\n  host: {\r\n    '[class]': 'ui.classList'\r\n  },\r\n  templateUrl: \"./lightbox.component.html\",\r\n})\r\nexport class LightboxComponent implements OnInit, AfterViewInit, OnDestroy, OnInit {\r\n  @Input() album: Array<IAlbum>;\r\n  @Input() currentImageIndex: number;\r\n  @Input() options: any;\r\n  @Input() cmpRef: any;\r\n  @ViewChild('outerContainer') _outerContainerElem: ElementRef;\r\n  @ViewChild('container') _containerElem: ElementRef;\r\n  @ViewChild('leftArrow') _leftArrowElem: ElementRef;\r\n  @ViewChild('rightArrow') _rightArrowElem: ElementRef;\r\n  @ViewChild('navArrow') _navArrowElem: ElementRef;\r\n  @ViewChild('dataContainer') _dataContainerElem: ElementRef;\r\n  @ViewChild('image') _imageElem: ElementRef;\r\n  @ViewChild('iframe') _iframeElem: ElementRef;\r\n  @ViewChild('caption') _captionElem: ElementRef;\r\n  @ViewChild('number') _numberElem: ElementRef;\r\n  public content: any;\r\n  public ui: any;\r\n  private _cssValue: any;\r\n  private _event: any;\r\n  private _windowRef: any;\r\n  private rotate: number;\r\n  constructor(\r\n    private _elemRef: ElementRef,\r\n    private _rendererRef: Renderer2,\r\n    private _lightboxEvent: LightboxEvent,\r\n    public _lightboxElem: ElementRef,\r\n    private _lightboxWindowRef: LightboxWindowRef,\r\n    private _sanitizer: DomSanitizer,\r\n    @Inject(DOCUMENT) private _documentRef\r\n  ) {\r\n    // initialize data\r\n    this.options = this.options || {};\r\n    this.album = this.album || [];\r\n    this.currentImageIndex = this.currentImageIndex || 0;\r\n    this._windowRef = this._lightboxWindowRef.nativeWindow;\r\n\r\n    // control the interactive of the directive\r\n    this.ui = {\r\n      // control the appear of the reloader\r\n      // false: image has loaded completely and ready to be shown\r\n      // true: image is still loading\r\n      showReloader: true,\r\n\r\n      // control the appear of the nav arrow\r\n      // the arrowNav is the parent of both left and right arrow\r\n      // in some cases, the parent shows but the child does not show\r\n      showLeftArrow: false,\r\n      showRightArrow: false,\r\n      showArrowNav: false,\r\n\r\n      // control the appear of the zoom and rotate buttons\r\n      showZoomButton: false,\r\n      showRotateButton: false,\r\n\r\n      // control whether to show the\r\n      // page number or not\r\n      showPageNumber: false,\r\n      showCaption: false,\r\n      classList: 'lightbox animation fadeIn'\r\n    };\r\n\r\n    this.content = {\r\n      pageNumber: ''\r\n    };\r\n\r\n    this._event = {};\r\n    this._lightboxElem = this._elemRef;\r\n    this._event.subscription = this._lightboxEvent.lightboxEvent$\r\n      .subscribe((event: IEvent) => this._onReceivedEvent(event));\r\n    this.rotate = 0;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.album.forEach(album => {\r\n      if (album.caption) {\r\n        album.caption = this._sanitizer.sanitize(SecurityContext.HTML, album.caption);\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    // need to init css value here, after the view ready\r\n    // actually these values are always 0\r\n    this._cssValue = {\r\n      containerTopPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-top')),\r\n      containerRightPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-right')),\r\n      containerBottomPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-bottom')),\r\n      containerLeftPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-left')),\r\n      imageBorderWidthTop: Math.round(this._getCssStyleValue(this._imageElem || this._iframeElem, 'border-top-width')),\r\n      imageBorderWidthBottom: Math.round(this._getCssStyleValue(this._imageElem || this._iframeElem, 'border-bottom-width')),\r\n      imageBorderWidthLeft: Math.round(this._getCssStyleValue(this._imageElem || this._iframeElem, 'border-left-width')),\r\n      imageBorderWidthRight: Math.round(this._getCssStyleValue(this._imageElem || this._iframeElem, 'border-right-width'))\r\n    };\r\n\r\n    if (this._validateInputData()) {\r\n      this._prepareComponent();\r\n      this._registerImageLoadingEvent();\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (!this.options.disableKeyboardNav) {\r\n      // unbind keyboard event\r\n      this._disableKeyboardNav();\r\n    }\r\n\r\n    this._event.subscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('close', ['$event'])\r\n  public close($event: any): void {\r\n    $event.stopPropagation();\r\n    if ($event.target.classList.contains('lightbox') ||\r\n      $event.target.classList.contains('lb-loader') ||\r\n      $event.target.classList.contains('lb-close')) {\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.CLOSE, data: null });\r\n    }\r\n  }\r\n\r\n  public control($event: any): void {\r\n    $event.stopPropagation();\r\n    let height: number;\r\n    let width: number;\r\n    if ($event.target.classList.contains('lb-turnLeft')) {\r\n      this.rotate = this.rotate - 90;\r\n      this._rotateContainer();\r\n      this._calcTransformPoint();\r\n      this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;\r\n      this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.ROTATE_LEFT, data: null });\r\n    } else if ($event.target.classList.contains('lb-turnRight')) {\r\n      this.rotate = this.rotate + 90;\r\n      this._rotateContainer();\r\n      this._calcTransformPoint();\r\n      this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;\r\n      this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.ROTATE_RIGHT, data: null });\r\n    } else if ($event.target.classList.contains('lb-zoomOut')) {\r\n      height = parseInt(this._documentRef.getElementById('outerContainer').style.height, 10) / 1.5;\r\n      width = parseInt(this._documentRef.getElementById('outerContainer').style.width, 10) / 1.5;\r\n      this._documentRef.getElementById('outerContainer').style.height = height + 'px';\r\n      this._documentRef.getElementById('outerContainer').style.width = width + 'px';\r\n      height = parseInt(this._documentRef.getElementById('image').style.height, 10) / 1.5;\r\n      width = parseInt(this._documentRef.getElementById('image').style.width, 10) / 1.5;\r\n      this._documentRef.getElementById('image').style.height = height + 'px';\r\n      this._documentRef.getElementById('image').style.width = width + 'px';\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.ZOOM_OUT, data: null });\r\n    } else if ($event.target.classList.contains('lb-zoomIn')) {\r\n      height = parseInt(this._documentRef.getElementById('outerContainer').style.height, 10) * 1.5;\r\n      width = parseInt(this._documentRef.getElementById('outerContainer').style.width, 10) * 1.5;\r\n      this._documentRef.getElementById('outerContainer').style.height = height + 'px';\r\n      this._documentRef.getElementById('outerContainer').style.width = width + 'px';\r\n      height = parseInt(this._documentRef.getElementById('image').style.height, 10) * 1.5;\r\n      width = parseInt(this._documentRef.getElementById('image').style.width, 10) * 1.5;\r\n      this._documentRef.getElementById('image').style.height = height + 'px';\r\n      this._documentRef.getElementById('image').style.width = width + 'px';\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.ZOOM_IN, data: null });\r\n    }\r\n  }\r\n\r\n  private _rotateContainer(): void {\r\n    let temp = this.rotate;\r\n    if (temp < 0) {\r\n      temp *= -1;\r\n    }\r\n    if (temp / 90 % 4 === 1 || temp / 90 % 4 === 3) {\r\n      this._documentRef.getElementById('outerContainer').style.height = this._documentRef.getElementById('image').style.width;\r\n      this._documentRef.getElementById('outerContainer').style.width = this._documentRef.getElementById('image').style.height;\r\n      this._documentRef.getElementById('container').style.height = this._documentRef.getElementById('image').style.width;\r\n      this._documentRef.getElementById('container').style.width = this._documentRef.getElementById('image').style.height;\r\n    } else {\r\n      this._documentRef.getElementById('outerContainer').style.height = this._documentRef.getElementById('image').style.height;\r\n      this._documentRef.getElementById('outerContainer').style.width = this._documentRef.getElementById('image').style.width;\r\n      this._documentRef.getElementById('container').style.height = this._documentRef.getElementById('image').style.width;\r\n      this._documentRef.getElementById('container').style.width = this._documentRef.getElementById('image').style.height;\r\n    }\r\n  }\r\n\r\n  private _resetImage(): void {\r\n    this.rotate = 0;\r\n    const image = this._documentRef.getElementById('image');\r\n    if (image) {\r\n      image.style.transform = `rotate(${this.rotate}deg)`;\r\n      image.style.webkitTransform = `rotate(${this.rotate}deg)`;\r\n    }\r\n\r\n  }\r\n\r\n  private _calcTransformPoint(): void {\r\n    let height = parseInt(this._documentRef.getElementById('image').style.height, 10);\r\n    let width = parseInt(this._documentRef.getElementById('image').style.width, 10);\r\n    let temp = this.rotate % 360;\r\n    if (temp < 0) {\r\n      temp = 360 + temp;\r\n    }\r\n    if (temp === 90) {\r\n      this._documentRef.getElementById('image').style.transformOrigin = (height / 2) + 'px ' + (height / 2) + 'px';\r\n    } else if (temp === 180) {\r\n      this._documentRef.getElementById('image').style.transformOrigin = (width / 2) + 'px ' + (height / 2) + 'px';\r\n } else if (temp === 270) {\r\n      this._documentRef.getElementById('image').style.transformOrigin = (width / 2) + 'px ' + (width / 2) + 'px';\r\n }\r\n  }\r\n\r\n  public nextImage(): void {\r\n    if (this.album.length === 1) {\r\n      return;\r\n    } else if (this.currentImageIndex === this.album.length - 1) {\r\n      this._changeImage(0);\r\n    } else {\r\n      this._changeImage(this.currentImageIndex + 1);\r\n    }\r\n  }\r\n\r\n  public prevImage(): void {\r\n    if (this.album.length === 1) {\r\n      return;\r\n    } else if (this.currentImageIndex === 0 && this.album.length > 1) {\r\n      this._changeImage(this.album.length - 1);\r\n    } else {\r\n      this._changeImage(this.currentImageIndex - 1);\r\n    }\r\n  }\r\n\r\n  private _validateInputData(): boolean {\r\n    if (this.album &&\r\n      this.album instanceof Array &&\r\n      this.album.length > 0) {\r\n      for (let i = 0; i < this.album.length; i++) {\r\n        // check whether each _nside\r\n        // album has src data or not\r\n        if (this.album[i].src) {\r\n          continue;\r\n        }\r\n\r\n        throw new Error('One of the album data does not have source data');\r\n      }\r\n    } else {\r\n      throw new Error('No album data or album data is not correct in type');\r\n    }\r\n\r\n    // to prevent data understand as string\r\n    // convert it to number\r\n    if (isNaN(this.currentImageIndex)) {\r\n      throw new Error('Current image index is not a number');\r\n    } else {\r\n      this.currentImageIndex = Number(this.currentImageIndex);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private _registerImageLoadingEvent(): void {\r\n    const src: any = this.album[this.currentImageIndex].src;\r\n\r\n    if (this.album[this.currentImageIndex].iframe || this.needsIframe(src)) {\r\n      setTimeout( () => {\r\n        this._onLoadImageSuccess();\r\n      });\r\n      return;\r\n    }\r\n\r\n    const preloader = new Image();\r\n\r\n    preloader.onload = () => {\r\n      this._onLoadImageSuccess();\r\n    }\r\n\r\n    preloader.onerror = (e) => {\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.FILE_NOT_FOUND, data: e });\r\n    }\r\n\r\n    preloader.src = this._sanitizer.sanitize(SecurityContext.URL, src);\r\n  }\r\n\r\n  /**\r\n   * Fire when the image is loaded\r\n   */\r\n  private _onLoadImageSuccess(): void {\r\n    if (!this.options.disableKeyboardNav) {\r\n      // unbind keyboard event during transition\r\n      this._disableKeyboardNav();\r\n    }\r\n\r\n    let imageHeight;\r\n    let imageWidth;\r\n    let maxImageHeight;\r\n    let maxImageWidth;\r\n    let windowHeight;\r\n    let windowWidth;\r\n    let naturalImageWidth;\r\n    let naturalImageHeight;\r\n\r\n    // set default width and height of image to be its natural\r\n    imageWidth = naturalImageWidth = this._imageElem ? this._imageElem.nativeElement.naturalWidth : this._windowRef.innerWidth * .8;\r\n    imageHeight = naturalImageHeight = this._imageElem ? this._imageElem.nativeElement.naturalHeight : this._windowRef.innerHeight * .8;\r\n    if (this.options.fitImageInViewPort) {\r\n      windowWidth = this._windowRef.innerWidth;\r\n      windowHeight = this._windowRef.innerHeight;\r\n      maxImageWidth = windowWidth - this._cssValue.containerLeftPadding -\r\n        this._cssValue.containerRightPadding - this._cssValue.imageBorderWidthLeft -\r\n        this._cssValue.imageBorderWidthRight - 20;\r\n      maxImageHeight = windowHeight - this._cssValue.containerTopPadding -\r\n        this._cssValue.containerTopPadding - this._cssValue.imageBorderWidthTop -\r\n        this._cssValue.imageBorderWidthBottom - 120;\r\n      if (naturalImageWidth > maxImageWidth || naturalImageHeight > maxImageHeight) {\r\n        if ((naturalImageWidth / maxImageWidth) > (naturalImageHeight / maxImageHeight)) {\r\n          imageWidth = maxImageWidth;\r\n          imageHeight = Math.round(naturalImageHeight / (naturalImageWidth / imageWidth));\r\n        } else {\r\n          imageHeight = maxImageHeight;\r\n          imageWidth = Math.round(naturalImageWidth / (naturalImageHeight / imageHeight));\r\n        }\r\n      }\r\n\r\n      this._rendererRef.setStyle((this._imageElem || this._iframeElem).nativeElement, 'width', `${imageWidth}px`);\r\n      this._rendererRef.setStyle((this._imageElem || this._iframeElem).nativeElement, 'height', `${imageHeight}px`);\r\n    }\r\n\r\n    this._sizeContainer(imageWidth, imageHeight);\r\n\r\n    if (this.options.centerVertically) {\r\n      this._centerVertically(imageWidth, imageHeight);\r\n    }\r\n  }\r\n\r\n  private _centerVertically(imageWidth: number, imageHeight: number): void {\r\n    const scrollOffset = this._documentRef.documentElement.scrollTop;\r\n    const windowHeight = this._windowRef.innerHeight;\r\n\r\n    const viewOffset = windowHeight / 2 - imageHeight / 2;\r\n    const topDistance = scrollOffset + viewOffset;\r\n\r\n    this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'top', `${topDistance}px`);\r\n  }\r\n\r\n  private _sizeContainer(imageWidth: number, imageHeight: number): void {\r\n    const oldWidth = this._outerContainerElem.nativeElement.offsetWidth;\r\n    const oldHeight = this._outerContainerElem.nativeElement.offsetHeight;\r\n    const newWidth = imageWidth + this._cssValue.containerRightPadding + this._cssValue.containerLeftPadding +\r\n      this._cssValue.imageBorderWidthLeft + this._cssValue.imageBorderWidthRight;\r\n    const newHeight = imageHeight + this._cssValue.containerTopPadding + this._cssValue.containerBottomPadding +\r\n      this._cssValue.imageBorderWidthTop + this._cssValue.imageBorderWidthBottom;\r\n\r\n    // make sure that distances are large enough for transitionend event to be fired, at least 5px.\r\n    if (Math.abs(oldWidth - newWidth) + Math.abs(oldHeight - newHeight) > 5) {\r\n      this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'width', `${newWidth}px`);\r\n      this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'height', `${newHeight}px`);\r\n\r\n      // bind resize event to outer container\r\n      // use enableTransition to prevent infinite loader\r\n      if (this.options.enableTransition) {\r\n        this._event.transitions = [];\r\n        ['transitionend', 'webkitTransitionEnd', 'oTransitionEnd', 'MSTransitionEnd'].forEach(eventName => {\r\n          this._event.transitions.push(\r\n            this._rendererRef.listen(this._outerContainerElem.nativeElement, eventName, (event: any) => {\r\n              if (event.target === event.currentTarget) {\r\n                this._postResize(newWidth, newHeight);\r\n              }\r\n            })\r\n          );\r\n        });\r\n      } else {\r\n        this._postResize(newWidth, newHeight);\r\n      }\r\n    } else {\r\n      this._postResize(newWidth, newHeight);\r\n    }\r\n  }\r\n\r\n  private _postResize(newWidth: number, newHeight: number): void {\r\n    // unbind resize event\r\n    if (Array.isArray(this._event.transitions)) {\r\n      this._event.transitions.forEach((eventHandler: any) => {\r\n        eventHandler();\r\n      });\r\n\r\n      this._event.transitions = [];\r\n    }\r\n\r\n    this._rendererRef.setStyle(this._dataContainerElem.nativeElement, 'width', `${newWidth}px`);\r\n    this._showImage();\r\n  }\r\n\r\n  private _showImage(): void {\r\n    this.ui.showReloader = false;\r\n    this._updateNav();\r\n    this._updateDetails();\r\n    if (!this.options.disableKeyboardNav) {\r\n      this._enableKeyboardNav();\r\n    }\r\n  }\r\n\r\n  private _prepareComponent(): void {\r\n    // add css3 animation\r\n    this._addCssAnimation();\r\n\r\n    // position the image according to user's option\r\n    this._positionLightBox();\r\n\r\n    // update controls visibility on next view generation\r\n    setTimeout(() => {\r\n      this.ui.showZoomButton = this.options.showZoom;\r\n      this.ui.showRotateButton = this.options.showRotate;\r\n    }, 0);\r\n  }\r\n\r\n  private _positionLightBox(): void {\r\n    // @see https://stackoverflow.com/questions/3464876/javascript-get-window-x-y-position-for-scroll\r\n    const top = (this._windowRef.pageYOffset || this._documentRef.documentElement.scrollTop) +\r\n      this.options.positionFromTop;\r\n    const left = this._windowRef.pageXOffset || this._documentRef.documentElement.scrollLeft;\r\n\r\n    if (!this.options.centerVertically) {\r\n      this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'top', `${top}px`);\r\n    }\r\n\r\n    this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'left', `${left}px`);\r\n    this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'display', 'block');\r\n\r\n    // disable scrolling of the page while open\r\n    if (this.options.disableScrolling) {\r\n      this._rendererRef.addClass(this._documentRef.documentElement, 'lb-disable-scrolling');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * addCssAnimation add css3 classes for animate lightbox\r\n   */\r\n  private _addCssAnimation(): void {\r\n    const resizeDuration = this.options.resizeDuration;\r\n    const fadeDuration = this.options.fadeDuration;\r\n\r\n    this._rendererRef.setStyle(this._lightboxElem.nativeElement,\r\n      '-webkit-animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._lightboxElem.nativeElement,\r\n      'animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._outerContainerElem.nativeElement,\r\n      '-webkit-transition-duration', `${resizeDuration}s`);\r\n    this._rendererRef.setStyle(this._outerContainerElem.nativeElement,\r\n      'transition-duration', `${resizeDuration}s`);\r\n    this._rendererRef.setStyle(this._dataContainerElem.nativeElement,\r\n      '-webkit-animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._dataContainerElem.nativeElement,\r\n      'animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle((this._imageElem || this._iframeElem).nativeElement,\r\n      '-webkit-animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle((this._imageElem || this._iframeElem).nativeElement,\r\n      'animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._captionElem.nativeElement,\r\n      '-webkit-animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._captionElem.nativeElement,\r\n      'animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._numberElem.nativeElement,\r\n      '-webkit-animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._numberElem.nativeElement,\r\n      'animation-duration', `${fadeDuration}s`);\r\n  }\r\n\r\n  private _end(): void {\r\n    this.ui.classList = 'lightbox animation fadeOut';\r\n    if (this.options.disableScrolling) {\r\n      this._rendererRef.removeClass(this._documentRef.documentElement, 'lb-disable-scrolling');\r\n    }\r\n    setTimeout(() => {\r\n      this.cmpRef.destroy();\r\n    }, this.options.fadeDuration * 1000);\r\n  }\r\n\r\n  private _updateDetails(): void {\r\n    // update the caption\r\n    if (typeof this.album[this.currentImageIndex].caption !== 'undefined' &&\r\n      this.album[this.currentImageIndex].caption !== '') {\r\n      this.ui.showCaption = true;\r\n    }\r\n\r\n    // update the page number if user choose to do so\r\n    // does not perform numbering the page if the\r\n    // array length in album <= 1\r\n    if (this.album.length > 1 && this.options.showImageNumberLabel) {\r\n      this.ui.showPageNumber = true;\r\n      this.content.pageNumber = this._albumLabel();\r\n    }\r\n  }\r\n\r\n  private _albumLabel(): string {\r\n    // due to {this.currentImageIndex} is set from 0 to {this.album.length} - 1\r\n    return this.options.albumLabel.replace(/%1/g, Number(this.currentImageIndex + 1)).replace(/%2/g, this.album.length);\r\n  }\r\n\r\n  private _changeImage(newIndex: number): void {\r\n    this._resetImage();\r\n    this.currentImageIndex = newIndex;\r\n    this._hideImage();\r\n    this._registerImageLoadingEvent();\r\n    this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.CHANGE_PAGE, data: newIndex });\r\n  }\r\n\r\n  private _hideImage(): void {\r\n    this.ui.showReloader = true;\r\n    this.ui.showArrowNav = false;\r\n    this.ui.showLeftArrow = false;\r\n    this.ui.showRightArrow = false;\r\n    this.ui.showPageNumber = false;\r\n    this.ui.showCaption = false;\r\n  }\r\n\r\n  private _updateNav(): void {\r\n    let alwaysShowNav = false;\r\n\r\n    // check to see the browser support touch event\r\n    try {\r\n      this._documentRef.createEvent('TouchEvent');\r\n      alwaysShowNav = (this.options.alwaysShowNavOnTouchDevices) ? true : false;\r\n    } catch (e) {\r\n      // noop\r\n    }\r\n\r\n    // initially show the arrow nav\r\n    // which is the parent of both left and right nav\r\n    this._showArrowNav();\r\n    if (this.album.length > 1) {\r\n      if (this.options.wrapAround) {\r\n        if (alwaysShowNav) {\r\n          // alternatives this.$lightbox.find('.lb-prev, .lb-next').css('opacity', '1');\r\n          this._rendererRef.setStyle(this._leftArrowElem.nativeElement, 'opacity', '1');\r\n          this._rendererRef.setStyle(this._rightArrowElem.nativeElement, 'opacity', '1');\r\n        }\r\n\r\n        // alternatives this.$lightbox.find('.lb-prev, .lb-next').show();\r\n        this._showLeftArrowNav();\r\n        this._showRightArrowNav();\r\n      } else {\r\n        if (this.currentImageIndex > 0) {\r\n          // alternatives this.$lightbox.find('.lb-prev').show();\r\n          this._showLeftArrowNav();\r\n          if (alwaysShowNav) {\r\n            // alternatives this.$lightbox.find('.lb-prev').css('opacity', '1');\r\n            this._rendererRef.setStyle(this._leftArrowElem.nativeElement, 'opacity', '1');\r\n          }\r\n        }\r\n\r\n        if (this.currentImageIndex < this.album.length - 1) {\r\n          // alternatives this.$lightbox.find('.lb-next').show();\r\n          this._showRightArrowNav();\r\n          if (alwaysShowNav) {\r\n            // alternatives this.$lightbox.find('.lb-next').css('opacity', '1');\r\n            this._rendererRef.setStyle(this._rightArrowElem.nativeElement, 'opacity', '1');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _showLeftArrowNav(): void {\r\n    this.ui.showLeftArrow = true;\r\n  }\r\n\r\n  private _showRightArrowNav(): void {\r\n    this.ui.showRightArrow = true;\r\n  }\r\n\r\n  private _showArrowNav(): void {\r\n    this.ui.showArrowNav = (this.album.length !== 1);\r\n  }\r\n\r\n  private _enableKeyboardNav(): void {\r\n    this._event.keyup = this._rendererRef.listen('document', 'keyup', (event: any) => {\r\n      this._keyboardAction(event);\r\n    });\r\n  }\r\n\r\n  private _disableKeyboardNav(): void {\r\n    if (this._event.keyup) {\r\n      this._event.keyup();\r\n    }\r\n  }\r\n\r\n  private _keyboardAction($event: any): void {\r\n    const KEYCODE_ESC = 27;\r\n    const KEYCODE_LEFTARROW = 37;\r\n    const KEYCODE_RIGHTARROW = 39;\r\n    const keycode = $event.keyCode;\r\n    const key = String.fromCharCode(keycode).toLowerCase();\r\n\r\n    if (keycode === KEYCODE_ESC || key.match(/x|o|c/)) {\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.CLOSE, data: null });\r\n    } else if (key === 'p' || keycode === KEYCODE_LEFTARROW) {\r\n      if (this.currentImageIndex !== 0) {\r\n        this._changeImage(this.currentImageIndex - 1);\r\n      } else if (this.options.wrapAround && this.album.length > 1) {\r\n        this._changeImage(this.album.length - 1);\r\n      }\r\n    } else if (key === 'n' || keycode === KEYCODE_RIGHTARROW) {\r\n      if (this.currentImageIndex !== this.album.length - 1) {\r\n        this._changeImage(this.currentImageIndex + 1);\r\n      } else if (this.options.wrapAround && this.album.length > 1) {\r\n        this._changeImage(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getCssStyleValue(elem: any, propertyName: string): number {\r\n    return parseFloat(this._windowRef\r\n      .getComputedStyle(elem.nativeElement, null)\r\n      .getPropertyValue(propertyName));\r\n  }\r\n\r\n  private _onReceivedEvent(event: IEvent): void {\r\n    switch (event.id) {\r\n      case LIGHTBOX_EVENT.CLOSE:\r\n        this._end();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public needsIframe(src: string) {\r\n    // const sanitizedUrl = this._sanitizer.sanitize(SecurityContext.URL, src);\r\n    if (src.match(/\\.pdf$/)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LightboxConfig {\r\n  public fadeDuration: number;\r\n  public resizeDuration: number;\r\n  public fitImageInViewPort: boolean;\r\n  public positionFromTop: number;\r\n  public showImageNumberLabel: boolean;\r\n  public alwaysShowNavOnTouchDevices: boolean;\r\n  public wrapAround: boolean;\r\n  public disableKeyboardNav: boolean;\r\n  public disableScrolling: boolean;\r\n  public centerVertically: boolean;\r\n  public enableTransition: boolean;\r\n  public albumLabel: string;\r\n  public showZoom: boolean;\r\n  public showRotate: boolean;\r\n  public containerElementResolver: (document: any) => HTMLElement;\r\n\r\n  constructor() {\r\n    this.fadeDuration = 0.7;\r\n    this.resizeDuration = 0.5;\r\n    this.fitImageInViewPort = true;\r\n    this.positionFromTop = 20;\r\n    this.showImageNumberLabel = false;\r\n    this.alwaysShowNavOnTouchDevices = false;\r\n    this.wrapAround = false;\r\n    this.disableKeyboardNav = false;\r\n    this.disableScrolling = false;\r\n    this.centerVertically = false;\r\n    this.enableTransition = true;\r\n    this.albumLabel = 'Image %1 of %2';\r\n    this.showZoom = false;\r\n    this.showRotate = false;\r\n    this.containerElementResolver = (documentRef) => documentRef.querySelector('body');\r\n  }\r\n}\r\n","import { Subscription } from 'rxjs';\r\n\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { IEvent, LIGHTBOX_EVENT, LightboxEvent } from './lightbox-event.service';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: '[lb-overlay]',\r\n  template: '',\r\n  host: {\r\n    '[class]': 'classList'\r\n  }\r\n})\r\nexport class LightboxOverlayComponent implements AfterViewInit, OnDestroy {\r\n  @Input() options: any;\r\n  @Input() cmpRef: any;\r\n  public classList;\r\n  private _subscription: Subscription;\r\n  constructor(\r\n    private _elemRef: ElementRef,\r\n    private _rendererRef: Renderer2,\r\n    private _lightboxEvent: LightboxEvent,\r\n    @Inject(DOCUMENT) private _documentRef,\r\n  ) {\r\n    this.classList = 'lightboxOverlay animation fadeInOverlay';\r\n    this._subscription = this._lightboxEvent.lightboxEvent$.subscribe((event: IEvent) => this._onReceivedEvent(event));\r\n  }\r\n\r\n  @HostListener('click')\r\n  public close(): void {\r\n    // broadcast to itself and all others subscriber including the components\r\n    this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.CLOSE, data: null });\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    const fadeDuration = this.options.fadeDuration;\r\n\r\n    this._rendererRef.setStyle(this._elemRef.nativeElement,\r\n      '-webkit-animation-duration', `${fadeDuration}s`);\r\n    this._rendererRef.setStyle(this._elemRef.nativeElement,\r\n      'animation-duration', `${fadeDuration}s`);\r\n    this._sizeOverlay();\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onResize(): void {\r\n    this._sizeOverlay();\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this._subscription.unsubscribe();\r\n  }\r\n\r\n  private _sizeOverlay(): void {\r\n    const width = this._getOverlayWidth();\r\n    const height = this._getOverlayHeight();\r\n\r\n    this._rendererRef.setStyle(this._elemRef.nativeElement, 'width', `${width}px`);\r\n    this._rendererRef.setStyle(this._elemRef.nativeElement, 'height', `${height}px`);\r\n  }\r\n\r\n  private _onReceivedEvent(event: IEvent): void {\r\n    switch (event.id) {\r\n      case LIGHTBOX_EVENT.CLOSE:\r\n        this._end();\r\n      break;\r\n      default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  private _end(): void {\r\n    this.classList = 'lightboxOverlay animation fadeOutOverlay';\r\n\r\n    // queue self destruction after the animation has finished\r\n    // FIXME: not sure if there is any way better than this\r\n    setTimeout(() => {\r\n      this.cmpRef.destroy();\r\n    }, this.options.fadeDuration * 1000);\r\n  }\r\n\r\n  private _getOverlayWidth(): number {\r\n    return Math.max(\r\n      this._documentRef.body.scrollWidth,\r\n      this._documentRef.body.offsetWidth,\r\n      this._documentRef.documentElement.clientWidth,\r\n      this._documentRef.documentElement.scrollWidth,\r\n      this._documentRef.documentElement.offsetWidth\r\n    );\r\n  }\r\n\r\n  private _getOverlayHeight(): number {\r\n    return Math.max(\r\n      this._documentRef.body.scrollHeight,\r\n      this._documentRef.body.offsetHeight,\r\n      this._documentRef.documentElement.clientHeight,\r\n      this._documentRef.documentElement.scrollHeight,\r\n      this._documentRef.documentElement.offsetHeight\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector\r\n} from '@angular/core';\r\nimport { LightboxComponent } from './lightbox.component';\r\nimport { LightboxConfig } from './lightbox-config.service';\r\nimport { LightboxEvent, LIGHTBOX_EVENT, IAlbum } from './lightbox-event.service';\r\nimport { LightboxOverlayComponent } from './lightbox-overlay.component';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Lightbox {\r\n  constructor(\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _injector: Injector,\r\n    private _applicationRef: ApplicationRef,\r\n    private _lightboxConfig: LightboxConfig,\r\n    private _lightboxEvent: LightboxEvent,\r\n    @Inject(DOCUMENT) private _documentRef\r\n  ) { }\r\n\r\n  open(album: Array<IAlbum>, curIndex = 0, options = {}): void {\r\n    const overlayComponentRef = this._createComponent(LightboxOverlayComponent);\r\n    const componentRef = this._createComponent(LightboxComponent);\r\n    const newOptions: Partial<LightboxConfig> = {};\r\n\r\n    // broadcast open event\r\n    this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.OPEN });\r\n    Object.assign(newOptions, this._lightboxConfig, options);\r\n\r\n    // attach input to lightbox\r\n    componentRef.instance.album = album;\r\n    componentRef.instance.currentImageIndex = curIndex;\r\n    componentRef.instance.options = newOptions;\r\n    componentRef.instance.cmpRef = componentRef;\r\n\r\n    // attach input to overlay\r\n    overlayComponentRef.instance.options = newOptions;\r\n    overlayComponentRef.instance.cmpRef = overlayComponentRef;\r\n\r\n    // FIXME: not sure why last event is broadcasted (which is CLOSED) and make\r\n    // lightbox can not be opened the second time.\r\n    // Need to timeout so that the OPEN event is set before component is initialized\r\n    setTimeout(() => {\r\n      this._applicationRef.attachView(overlayComponentRef.hostView);\r\n      this._applicationRef.attachView(componentRef.hostView);\r\n      overlayComponentRef.onDestroy(() => {\r\n        this._applicationRef.detachView(overlayComponentRef.hostView);\r\n      });\r\n      componentRef.onDestroy(() => {\r\n        this._applicationRef.detachView(componentRef.hostView);\r\n      });\r\n\r\n      const containerElement = newOptions.containerElementResolver(this._documentRef);\r\n      containerElement.appendChild(overlayComponentRef.location.nativeElement);\r\n      containerElement.appendChild(componentRef.location.nativeElement);\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    if (this._lightboxEvent) {\r\n      this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.CLOSE });\r\n    }\r\n  }\r\n\r\n  _createComponent(ComponentClass: any): ComponentRef<any> {\r\n    const factory = this._componentFactoryResolver.resolveComponentFactory(ComponentClass);\r\n    const component = factory.create(this._injector);\r\n\r\n    return component;\r\n  }\r\n}\r\n","import { Lightbox } from './lightbox.service';\r\nimport {LightboxComponent, SafePipe} from './lightbox.component';\r\nimport { LightboxConfig } from './lightbox-config.service';\r\nimport { LightboxEvent, LightboxWindowRef } from './lightbox-event.service';\r\nimport { LightboxOverlayComponent } from './lightbox-overlay.component';\r\nimport { NgModule } from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule ],\r\n  declarations: [ LightboxOverlayComponent, LightboxComponent, SafePipe ],\r\n  providers: [\r\n    Lightbox,\r\n    LightboxConfig,\r\n    LightboxEvent,\r\n    LightboxWindowRef\r\n  ],\r\n  entryComponents: [ LightboxOverlayComponent, LightboxComponent ]\r\n})\r\nexport class LightboxModule { }\r\n"]}